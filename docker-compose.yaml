version: '3'

services:
  base:
    &base
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        BUNDLE_WITHOUT: ''
        RAILS_ENV: 'development'
    tty: true
    stdin_open: true
    image: pupilfirst:development
    env_file: .env

  rails:
    <<: *base
    build:
      context: .
      dockerfile: ./docker/dockerfiles/rails.Dockerfile
    image: pupilfirst-rails:development
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - cache:/app/tmp/cache
      - bundle:/usr/local/bundle
    depends_on:
      - postgres
    ports:
      - 3000:3000
    env_file: .env
    environment:
      - WEBPACKER_DEV_SERVER_HOST=webpack
      - NODE_ENV=development
      - RAILS_ENV=development
    entrypoint: docker/entrypoints/rails.sh
    command:
      [
        "bundle",
        "exec",
        "rails",
        "s",
        "-p",
        "3000",
        "-b",
        "0.0.0.0"
      ]

  webpack:
    <<: *base
    build:
      context: .
      dockerfile: ./docker/dockerfiles/webpack.Dockerfile
    image: pupilfirst-webpack:development
    volumes:
      - ./:/app
      - node_modules:/app/node_modules # Node modules shared across containers
      - packs:/app/public/packs
      - cache:/app/tmp/cache
      - bundle:/usr/local/bundle
    ports:
      - "3035" # Webpack dev server
    environment:
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0
      - NODE_ENV=development
      - RAILS_ENV=development
    entrypoint: docker/entrypoints/webpack.sh
    depends_on:
      - postgres
      - rescript
    command: [ "yarn", "run", "wds" ]

  rescript:
    <<: *base
    build:
      context: .
      dockerfile: ./docker/dockerfiles/rescript.Dockerfile
    image: pupilfirst-rescript:development
    volumes:
      - ./:/app
      - node_modules:/app/node_modules # Node modules shared across containers
      - packs:/app/public/packs
      - cache:/app/tmp/cache
      - bundle:/usr/local/bundle
    environment:
      - NODE_ENV=development
      - RAILS_ENV=development
    entrypoint: docker/entrypoints/rescript.sh
    depends_on:
      - postgres
    command: [ "yarn", "run", "re:watch" ]

  postgres:
    image: postgres:12
    restart: always
    ports:
      - '5099:5432'
    volumes:
      - postgres:/data/postgres
    environment:
      - POSTGRES_DB=pupilfirst
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

volumes:
  postgres:
  packs:
  node_modules:
  cache:
  bundle:
